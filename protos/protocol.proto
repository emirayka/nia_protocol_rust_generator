syntax = "proto3";

// utils
message KeyChordPart {
    message KeyChordPart1 {
        int32 key_id = 1;
    }

    message KeyChordPart2 {
        int32 keyboard_id = 1;
        int32 key_id = 2;
    }

    oneof key_chord_part {
        KeyChordPart1 key_chord_part_1 = 1;
        KeyChordPart2 key_chord_part_2 = 2;
    }
}

message KeyChord {
    repeated KeyChordPart modifiers = 1;
    KeyChordPart key = 2;
}

message Action {
}

// handshake
message HandshakeRequest {
}

message HandshakeResponse {
    message SuccessResult {
        string version = 1;
        string info = 2;
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// get devices
message GetDevicesRequest {
}

message GetDevicesResponse {
    message SuccessResult {
        repeated string devices = 1;
    }
    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// get device info
message GetDeviceInfoRequest {
    string device = 1;
}

message GetDeviceInfoResponse {
    message SuccessResult {
        string device = 1;
        string name = 2;
        string model = 3;
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// register keyboard
message RegisterKeyboardRequest {
    string device = 1;
}

message RegisterKeyboardResponse {
    message SuccessResult {
        int32 keyboard_id = 1;
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// define modifier
message DefineModifierRequest {
    KeyChordPart key_chord_part = 1;
}

message DefineModifierResponse {
    message SuccessResult {
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// define binding
message DefineBindingRequest {
    repeated KeyChord key_chords = 1;
    Action action = 2;
}

message DefineBindingResponse {
    message SuccessResult {
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// execute code
message ExecuteCodeRequest {
    string code = 1;
}

message ExecuteCodeResponse {
    message SuccessResult {
        string execution_result = 1;
    }

    message ErrorResult {
        string message = 1;
    }

    message FailureResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
        FailureResult failure_result = 3;
    }
}


// start listening
message StartListeningRequest {
}

message StartListeningResponse {
    message SuccessResult {
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// stop listening
message StopListeningRequest {
}

message StopListeningResponse {
    message SuccessResult {
    }

    message ErrorResult {
        string message = 1;
    }

    oneof result {
        SuccessResult success_result = 1;
        ErrorResult error_result = 2;
    }
}

// request, response

message Request {
    oneof request {
        HandshakeRequest handshake_request = 1;
        GetDevicesRequest get_devices_request = 2;
        GetDeviceInfoRequest get_device_info_request = 3;
        ExecuteCodeRequest execute_code_request = 4;
        RegisterKeyboardRequest register_keyboard_request = 5;
        DefineModifierRequest define_modifier_request = 6;
        DefineBindingRequest define_binding_request = 7;
        StartListeningRequest start_listening_request = 8;
        StopListeningRequest stop_listening_request = 9;
    }
}

message Response {
    oneof request {
        HandshakeResponse handshake_response = 1;
        GetDevicesResponse get_devices_response = 2;
        GetDeviceInfoResponse get_device_info_response = 3;
        ExecuteCodeResponse execute_code_response = 4;
        RegisterKeyboardResponse register_keyboard_response = 5;
        DefineModifierResponse define_modifier_response = 6;
        DefineBindingResponse define_binding_response = 7;
        StartListeningResponse start_listening_response = 8;
        StopListeningResponse stop_listening_response = 9;
    }
}
